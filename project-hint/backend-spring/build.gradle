buildscript {
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'war'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.hwaner.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: "com.ewerk.gradle.plugins.querydsl"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //web, restful
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //soap
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    /**
     * 클래스에 @ConfigurationProperties를 지정하게 되면
     * application.yml 파일의 값을 읽어와서 멤버변수에 자동으로 할당.
     * 이때, application.yml의 key와 일치하는 멤버변수가 연결되는데
     * application.yml 파일의 key값이 user-id 과 같이 중앙 하이픈(-)이 포함된 경우
     * 카멜표기법으로 변환된 key가 멤버변수와 연결된다.
     */
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

//    implementation 'io.springfox:springfox-boot-starter:3.0.0'
//    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'
    implementation 'com.querydsl:querydsl-sql'
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

//    runtimeOnly 'com.h2database:h2'
    compileOnly 'com.h2database:h2'
    implementation 'com.oracle.database.jdbc:ojdbc8'

    //sql log -> P6 spy -> https://github.com/gavlyukovskiy/spring-boot-data-source-decorator
    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0")

//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.jsoup:jsoup:1.15.2'
    implementation 'com.google.code.gson:gson'
    implementation 'com.opencsv:opencsv:5.6'
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'org.apache.clerezza.ext:org.json.simple:0.4'


    compileOnly 'javax.servlet:javax.servlet-api'

    //JSP 추가 시작
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'javax.servlet:jstl'
    //JSP 추가 끝

    testImplementation 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
    testImplementation 'org.dbunit:dbunit:2.7.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslSrcDir = 'src/main/querydsl'

querydsl {
    library = 'com.querydsl:querydsl-apt'
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets{
    main{
        java{
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}
